trigger:
  branches:
    include:
    - '*'
  paths:
    include:
    - azure-pipelines.yml
    - .azure-pipelines
    - CMakeLists.txt
    - etc/
    - examples/
    - src/
    - utils/

pr:
  branches:
    include:
    - '*'
  paths:
    include:
    - azure-pipelines.yml
    - .azure-pipelines
    - CMakeLists.txt
    - etc/
    - examples/
    - src/
    - utils/

variables:
  omniorb: omniORB-4.3.2-x64-vc16-py312
  omniorbUrl: https://openrtm.org/pub/omniORB/win32/omniORB-4.3.2
  ros2: ros2-jazzy-20240705-windows-release-amd64
  ros2Url: https://github.com/ros2/ros2/releases/download/release-jazzy-20240705/

jobs:
  - job: Build
    strategy:
      matrix:
        vs2022:
          imageVersion: 'windows-2022'
        vs2019:
          imageVersion: 'windows-2019'

    pool:
      vmImage: $(imageVersion)

    steps:
      - template: .azure-pipelines/openrtm-build-environment.yml
        parameters:
          omniorb: $(omniorb)
          omniorbUrl: $(omniorbUrl)
          ros2: $(ros2)
          ros2Url: $(ros2Url)

      - task: CMake@1
        env:
          PYTHONPATH: '$(Pipeline.Workspace)\ros2-windows\Lib\site-packages;$(PYTHONPATH)'
          ROS_DISTRO: 'jazzy'
          ROS_PYTHON_VERSION: '3'
          ROS_VERSION: '2'
          AMENT_PREFIX_PATH: '$(Pipeline.Workspace)\ros2-windows'
          CMAKE_PREFIX_PATH: '$(Pipeline.Workspace)\ros2-windows'
          PKG_CONFIG_PATH: '$(Pipeline.Workspace)\ros2-windows\lib\pkgconfig'
          COLCON_PREFIX_PATH: '$(Pipeline.Workspace)\ros2-windows'
        inputs:
          workingDirectory: 'build'
          cmakeArgs:
            -A x64
            -DRTM_VC_VER=vc16
            -DCORBA=omniORB
            -DORB_ROOT=$(Pipeline.Workspace)\$(omniorb)
            -DOBSERVER_ENABLE=ON
            -DSSL_ENABLE=ON
            -DFASTRTPS_ENABLE=ON
            -DROS2_ENABLE=ON
            $(Build.SourcesDirectory)

      - task: VSBuild@1
        inputs:
          solution: 'build/OpenRTM_aist.sln'
          configuration: 'Release'
          maximumCpuCount: true
          createLogFile: true
          logFileVerbosity: 'minimal'

  - job: Analyze
    pool:
      vmImage: 'windows-latest'

    variables:
      vcPath: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC'

    steps:
      - template: .azure-pipelines/openrtm-build-environment.yml
        parameters:
          omniorb: $(omniorb)
          omniorbUrl: $(omniorbUrl)
          ros2: $(ros2)
          ros2Url: $(ros2Url)

      - script: |
          call "$(vcPath)\Auxiliary\Build\vcvars64.bat"
          cmake ^
            -B $(Build.SourcesDirectory)/build ^
            -G Ninja ^
            -DCMAKE_C_COMPILER:FILEPATH="$(vcPath)\Tools\Llvm\bin\clang-cl.exe" ^
            -DCMAKE_CXX_COMPILER:FILEPATH="$(vcPath)\Tools\Llvm\bin\clang-cl.exe" ^
            -DCMAKE_LINKER:FILEPATH="$(vcPath)\Tools\Llvm\bin\lld-link.exe" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DRTM_VC_VER=vc16 ^
            -DCORBA=omniORB ^
            -DORB_ROOT=$(Pipeline.Workspace)\$(omniorb) ^
            -DOBSERVER_ENABLE=ON ^
            -DSSL_ENABLE=ON ^
            -DFASTRTPS_ENABLE=ON ^
            -DROS2_ENABLE=ON ^
            $(Build.SourcesDirectory)
          cmake --build $(Build.SourcesDirectory)\build
        displayName: Analyze by Clang
        env:
          CFLAGS: -m64 -fdiagnostics-absolute-paths
          CXXFLAGS: -m64 -fdiagnostics-absolute-paths
          PYTHONPATH: '$(Pipeline.Workspace)\ros2-windows\Lib\site-packages;$(PYTHONPATH)'
          ROS_DISTRO: 'jazzy'
          ROS_PYTHON_VERSION: '3'
          ROS_VERSION: '2'
          AMENT_PREFIX_PATH: '$(Pipeline.Workspace)\ros2-windows'
          CMAKE_PREFIX_PATH: '$(Pipeline.Workspace)\ros2-windows'
          PKG_CONFIG_PATH: '$(Pipeline.Workspace)\ros2-windows\lib\pkgconfig'
          COLCON_PREFIX_PATH: '$(Pipeline.Workspace)\ros2-windows'
