parameters:
- name: 'omniorb'
  type: string
- name: 'omniorbUrl'
  type: string
- name: 'opensslVersion'
  type: string
  default: '1.1.1.400'
- name: 'ros2'
  type: string
- name: 'ros2Url'
  type: string

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.12'
    addToPath: true
    architecture: 'x64'

- task: Cache@2
  displayName: Cache omniORB
  inputs:
    key: '"${{ parameters.omniorb }}"'
    path: '$(Pipeline.Workspace)\${{ parameters.omniorb }}'
    cacheHitVar: OMNIORB_CACHE

- task: Cache@2
  displayName: Cache OpenSSL
  inputs:
    key: 'OpenSSL | "${{ parameters.opensslVersion }}"'
    path: 'C:\Program Files\OpenSSL-Win64'
    cacheHitVar: OPENSSL_CACHE

- task: Cache@2
  displayName: Cache ROS2
  inputs:
    key: '"$(ros2)"'
    path: '$(Pipeline.Workspace)\ros2-windows'
    cacheHitVar: ROS2_CACHE

- task: PowerShell@2
  displayName: Prepare omniORB
  condition: ne(variables.OMNIORB_CACHE, 'true')
  inputs:
    targetType: 'inline'
    script: |
      Invoke-WebRequest -Uri "${{ parameters.omniorbUrl }}/${{ parameters.omniorb }}.zip" -OutFile "$(Agent.TempDirectory)\omniORB.zip"
      Expand-Archive -Path "$(Agent.TempDirectory)\omniORB.zip" -DestinationPath "$(Pipeline.Workspace)"

- task: PowerShell@2
  displayName: Prepare ROS2
  condition: ne(variables.ROS2_CACHE, 'true')
  inputs:
    targetType: 'inline'
    script: |
      Invoke-WebRequest -Uri "$(ros2Url)/$(ros2).zip" -OutFile "$(Agent.TempDirectory)\ros2-windows.zip"
      Expand-Archive -Path "$(Agent.TempDirectory)\ros2-windows.zip" -DestinationPath "$(Pipeline.Workspace)"

- script: choco install -y --no-progress openssl --version=${{ parameters.opensslVersion }}
  displayName: Install OpenSSL
  condition: ne(variables.OPENSSL_CACHE, 'true')
